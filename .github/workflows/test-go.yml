---
name: Test - Golang

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

jobs:
  gotest:
    name: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ci-database: ["sqlite", "cockroach", "postgres"]
        include:
          - ci-database: "sqlite"
            env-database-uri: "sqlite://file:ent?mode=memory&cache=shared&_fk=1"
          - ci-database: "cockroach"
            env-database-uri: "docker://cockroach:latest"
          - ci-database: "postgres"
            env-database-uri: "docker://postgres:latest"

    steps:
      - name: Checkout code for ${{ matrix.ci-database }}
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Set up Go for ${{ matrix.ci-database }}
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version-file: "go.mod"

      - name: Run go tests for ${{ matrix.ci-database }}
        run: METADATAAPI_TESTDB_URI="${{ matrix.env-database-uri }}" go test -p 1 -race -coverprofile=coverage.txt -covermode=atomic -tags testtools ./...

  success:
    if: ${{ !cancelled() }}
    needs: ["gotest"]
    name: Success
    runs-on: ubuntu-latest
    steps:
      - name: Any jobs failed?
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: All jobs passed or skipped?
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "All jobs passed or skipped" && echo "${{ toJSON(needs.*.result) }}"
